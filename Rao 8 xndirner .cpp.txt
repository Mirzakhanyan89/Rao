#include <iostream> //Rao 8.1 Factorial with recursiv
int factorial (int);

int main() {
  int num=0;
  std::cout<< "Enter any positive number, and \
   I will print factorial of that number:\n";
  std::cin>> num;
  factorial (num);
  std::cout<< factorial (num);
     return 0;
}
int factorial (int num)
  { 
    if (num < 0)
      {
        return  -1;
      }
    if (num == 0)
      {
        return 1;
      }
    else 
      {
        return num * factorial (num-1);
      }
  }


#include <iostream> //Rao 8.2 Factorial with iterativ
void factorial (int);

int main() {
  int num=0;
  std::cout<< "Enter any positive number, and \
   I will print factorial of that number:\n";
  std::cin>> num;
  factorial (num);
     return 0;
}
void factorial (int num)
  { 
    int fact = 0;
    if (num > 0)
    {
      fact = num;
    }
  else 
    {
      std::cout<< "Please enter positive number:\n";
    }
  while (num > 1)
    {
      fact *= (num-1);
      --num;
    }
    std::cout<< fact;
  }



#include <iostream> //Rao 8.3 Until null with recursiv
int foo (int);

int main() {
  int num=0;
  std::cout<< "Enter any positive number, and \
   I will print since that number until null:\n";
  std::cin>> num;
  foo (num);
       return 0;
}
int foo (int num)
  { 
    if (num < 0)
      {
        return 0 ;
      }
    else 
      {
        std::cout<< num << "\t" ;
        --num;
        return foo(num);
      }
  }

#include <iostream> //Rao 8.4 Until null with iterativ
void foo (int);

int main() {
  int num=0;
  std::cout<< "Enter any positive number, and \
   I will print since that number until null:\n";
  std::cin>> num;
  foo (num);
       return 0;
}
void foo (int num)
  { 
    if (num >0) 
      {
        while (num >= 0)
         {
            std::cout<< num << "\t" ;
            --num;
          }
      }
    else 
      {
        std::cout<< "Please enter positive number: \n";
      }
  }





#include <iostream> // Rao 8.6 fibonachi.

int main() {
int n;
std::cout<< "Enter any number: \n";
std::cin>> n;
int arr[n];
arr[0]=0;
arr[1]=1;
for (int i=2; i<n; ++i)
  {
     arr[i]= arr[i-1] + arr[i-2];
  }
  std::cout<< arr[n-1];
    return 0;
}







#include <iostream> // Rao 8.8 Revers string
#include <string>
void revers_words (std::string);

int main () 
{  
  std::string mind;
  std::cout<< "Enter a mind and I will print with the opposite sequence.\n";
  std::getline(std::cin, mind);
  revers_words (mind);
       return 0;
}
void revers_words (std::string str)
  {
    int i, j;
for (i=0, j=str.size()-1; j>i; ++i,--j)
  { 
    char temp = str[i];
    str[i]= str[j];
    str[j]= temp; 
  }  
std::cout<< str; 
  }





